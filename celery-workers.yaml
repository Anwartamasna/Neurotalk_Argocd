apiVersion: apps/v1
kind: Deployment
metadata:
  name: neurotalk-ai-worker
  namespace: neurotalk
  labels:
    app: neurotalk-ai-worker
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: neurotalk-ai-worker
  template:
    metadata:
      labels:
        app: neurotalk-ai-worker
    spec:
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: ai-worker
          image: harbor.imadzajli.xyz/neurotalk-back/neurotalk-backend:112
          imagePullPolicy: IfNotPresent
          command: ["uv"]
          args:
            [
              "run","celery","-A","app.celery_app","worker",
              "--loglevel=INFO",
              "--queues=ai_processing",
              "--prefetch-multiplier=1",
              "--hostname=%h.ai"
            ]
          env:
            - name: ENV
              value: "k8s"
            - name: UV_CACHE_DIR
              value: "/var/cache/uv"
            - name: DATABASE_NAME
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_name } }
            - name: DATABASE_USER
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_user } }
            - name: DATABASE_PASSWORD
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_password } }
            - name: DATABASE_HOST
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_host } }
            - name: DATABASE_PORT
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_port } }
            - name: ALLOWED_HOST
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: allowed_host } }
            - name: CORS_ALLOWED_ORIGINS
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: cors_allowed_origins } }
            - name: CELERY_BROKER_URL
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: celery_broker_url } }
            - name: CELERY_RESULT_URL
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: celery_result_url } }
            - name: CHANNELS_URLS
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: channels_url } }
          resources:
            requests:
              cpu: "300m"
              memory: "2Gi"
            limits:
              cpu: "1500m"
              memory: "4Gi"
          volumeMounts:
            - name: uv-cache
              mountPath: /var/cache/uv
            - name: backend-config
              mountPath: /app/config
              readOnly: true
          livenessProbe:
            exec:
              command: ["uv","run","celery","-A","app.celery_app","inspect","ping"]
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 3
      volumes:
        - name: uv-cache
          emptyDir: {}
        - name: backend-config
          configMap:
            name: backend-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: neurotalk-payment-worker
  namespace: neurotalk
  labels:
    app: neurotalk-payment-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neurotalk-payment-worker
  template:
    metadata:
      labels:
        app: neurotalk-payment-worker
    spec:
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: payment-worker
          image: harbor.imadzajli.xyz/neurotalk-back/neurotalk-backend:112
          imagePullPolicy: IfNotPresent
          command: ["uv"]
          args:
            [
              "run","celery","-A","app.celery_app","worker",
              "--loglevel=INFO",
              "--queues=payment_processing",
              "--prefetch-multiplier=1",
              "--hostname=%h.payment"
            ]
          env:
            - name: ENV
              value: "k8s"
            - name: UV_CACHE_DIR
              value: "/var/cache/uv"
            - name: DATABASE_NAME
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_name } }
            - name: DATABASE_USER
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_user } }
            - name: DATABASE_PASSWORD
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_password } }
            - name: DATABASE_HOST
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_host } }
            - name: DATABASE_PORT
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: database_port } }
            - name: ALLOWED_HOST
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: allowed_host } }
            - name: CORS_ALLOWED_ORIGINS
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: cors_allowed_origins } }
            - name: CELERY_BROKER_URL
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: celery_broker_url } }
            - name: CELERY_RESULT_URL
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: celery_result_url } }
            - name: CHANNELS_URLS
              valueFrom: { secretKeyRef: { name: neurotalk-secrets, key: channels_url } }
          resources:
            requests:
              cpu: "300m"
              memory: "2Gi"
            limits:
              cpu: "1000m"
              memory: "3Gi"
          volumeMounts:
            - name: uv-cache
              mountPath: /var/cache/uv
            - name: backend-config
              mountPath: /app/config
              readOnly: true
          livenessProbe:
            exec:
              command: ["uv","run","celery","-A","app.celery_app","inspect","ping"]
            initialDelaySeconds: 60
            periodSeconds: 60
            timeoutSeconds: 30
            failureThreshold: 3
      volumes:
        - name: uv-cache
          emptyDir: {}
        - name: backend-config
          configMap:
            name: backend-config
